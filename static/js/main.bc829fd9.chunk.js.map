{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","getAll","fetch","then","response","json","App","useState","visibleGoods","setVisibleGoods","inicialized","setInicialized","className","type","onClick","a","goodsAPI","sort","good1","good2","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAkB,UAAQ,OAAOC,MAAO,CAAEC,MAAM,GAAD,OAAKF,EAAKE,QAAzD,SACGF,EAAKG,MADCH,EAAKI,UCLb,SAASC,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICFMC,EAAgB,WAC3B,MAAwCC,mBAAS,CAAC,CAChDP,GAAI,EACJD,KAAM,GACND,MAAO,MAHT,mBAAOU,EAAP,KAAqBC,EAArB,KAKA,EAAsCF,oBAAS,GAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEA,OACE,sBAAKC,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAC,EAAA,sEACDC,IAAkBb,MAAK,SAAAT,GAAK,OAAIe,EAAgBf,MAD/C,OAEPiB,GAAe,GAFR,2CAHX,4BAWA,wBACEE,KAAK,SACL,UAAQ,oBACRC,QAAO,sBAAE,sBAAAC,EAAA,sEDvBRd,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZuB,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMnB,KAAKqB,cAAcD,EAAMpB,SACtDsB,MAAM,EAAG,MCqBqBlB,MAAK,SAAAT,GAAK,OAAIe,EAAgBf,MADlD,OAEPiB,GAAe,GAFR,2CAHX,gCAWA,wBACEE,KAAK,SACL,UAAQ,aACRC,QAAO,sBAAE,sBAAAC,EAAA,sED3BRd,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAM4B,QAAO,SAAA1B,GAAI,MAAmB,QAAfA,EAAKE,YC2BNK,MAAK,SAAAT,GAAK,OAAIe,EAAgBf,MADpD,OAEPiB,GAAe,GAFR,2CAHX,4BAWCD,GAAe,cAAC,EAAD,CAAWhB,MAAOc,QClDxCe,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bc829fd9.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li key={good.id} data-cy=\"good\" style={{ color: `${good.color}` }}>\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((good1, good2) => good1.name.localeCompare(good2.name))\n      .slice(0, 5)); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red')); // get only red\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\n// import { getAll, get5First, getRed } from './api/goods';\n// or\nimport * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [visibleGoods, setVisibleGoods] = useState([{\n    id: 0,\n    name: '',\n    color: '',\n  }]);\n  const [inicialized, setInicialized] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={async () => {\n          await goodsAPI.getAll().then(goods => setVisibleGoods(goods));\n          setInicialized(true);\n        }}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={async () => {\n          await goodsAPI.get5First().then(goods => setVisibleGoods(goods));\n          setInicialized(true);\n        }}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={async () => {\n          await goodsAPI.getRedGoods().then(goods => setVisibleGoods(goods));\n          setInicialized(true);\n        }}\n      >\n        Load red goods\n      </button>\n\n      {inicialized && <GoodsList goods={visibleGoods} />}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}